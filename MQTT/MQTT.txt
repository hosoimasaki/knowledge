【MQTT】
MQ Telemetry Transport（Message Queuing Telemetry Transport、略称 MQTT）は、
メッセージ指向ミドルウェアのアプリケーション層で使用される、
TCP/IPによるPub/Sub型データ配信モデルの軽量なデータ配信プロトコルである。

MQTTのMQについて歴史的にはMQSeriesから来ているが、メッセージキューの機能は有していない。

非力なデバイスやネットワークが不安定な場所でも動作しやすいように、
メッセージ通信電文が軽量に設計されていることが特徴である。

Pub/Sub型メッセージング·パターンには、メッセージブローカーが必要である。

ブローカーは、メッセージのTopicに基づいて、それを必要としている
クライアントにメッセージを配信する。

アンディー·スタンフォード·クラーク（英語版）とシーラスリンクソリューションの
アーレンニッパーは1999年に、プロトコルの最初のバージョンを執筆している。


【柔軟性の高いメッセージ配布(Sub：購読)】
配布先条件が"/"区切りの階層構造になっており、さらにワイルドカードによる指定ができる。
配布先はそのパターンにマッチした宛先になる。

TopicベースでのPub/Sub
1対1、1対N、N対Nのメッセージ配布


【メッセージ再配布機能】
メッセージ再配布機能（Durable subscribe）は、次のフローで処理される。

意図せずにSubscriber（メッセージ配布者）通信が切断
その後、当該のSubscriberが再接続
切断から再接続までに発生したメッセージを再送処理
QoS1,2のメッセージを再配布する


【Retain】
ブローカーが最後に配布したメッセージは必ず保存する


【MQTT v5.0】
MQTT v5.0は、コアの多くを適切に維持しながら、MQTTに多数の新機能を追加します。
主な機能目標は次のとおりです。
--
MQTTv5.0に次の新機能が追加されました

 

・セッションの有効期限
Clean Sessionフラグを、既存のセッションを使用せずにセッションを開始する
必要があることを示すClean Startフラグと、切断後にセッションを保持する期間を示す
SessionExpiry間隔に分割します。セッションの有効期限は、切断時に変更できます。
クリーンスタートを1に設定し、セッションの有効期限間隔を0に設定することは、
クリーンセッションを1に設定するMQTTv3.1.1と同等です。

・メッセージの有効期限
メッセージが公開されたときに有効期限を設定できるようにします。

・すべてのACKの理由コード
すべての応答パケットを変更して、理由コードを含めます。
これには、CONNACK、PUBACK、PUBREC、PUBREL、PUBCOMP、SUBACK、UNSUBACK、DISCONNECT、
およびAUTHが含まれます。これにより、呼び出し元は、要求された関数が成功したかどうかを判断できます。

・すべてのACKの理由文字列
オプションの理由文字列も許可するように、理由コードを使用してほとんどのパケットを変更します。
これは問題判別のために設計されており、受信者による解析を目的としたものではありません。

・サーバーの切断
接続が閉じられた理由を示すために、サーバーからDISCONNECTが送信されることを許可します。

・ペイロード形式とコンテンツタイプ
メッセージの公開時に、ペイロード形式（バイナリ、テキスト）とMIMEスタイルのコンテンツタイプを
指定できるようにします。これらはメッセージの受信者に転送されます。

・要求/応答
MQTT内で要求/応答パターンを形式化し、応答トピックと相関データのプロパティを提供して、
応答メッセージを要求の発行者にルーティングして戻すことができるようにします。
また、クライアントが応答トピックの作成方法に関する構成情報をサーバーから取得する機能を追加します。

・共有サブスクリプション
サブスクリプションの負荷分散されたコンシューマーを可能にする共有サブスクリプションサポートを追加します

・サブスクリプションID
SUBSCRIBEで数値のサブスクリプションIDを指定し、配信時にメッセージで返されるようにします。
これにより、クライアントは、メッセージが配信された原因となった1つまたは複数のサブスクリプションを判別できます。

・トピックエイリアス
トピック名を小さな整数に短縮できるようにすることで、MQTTパケットのオーバーヘッドのサイズを減らします。
クライアントとサーバーは、許可するトピックエイリアスの数を個別に指定します。

・フロー制御
クライアントとサーバーが、許可する未処理の信頼できるメッセージの数（QoS> 0）を個別に指定できるようにします。
送信者は、この割り当てを下回るために、このようなメッセージの送信を一時停止します。
これは、信頼できるメッセージのレートを制限し、一度に送信されるメッセージの数を制限するために使用されます。


・ユーザープロパティ
ほとんどのパケットにユーザープロパティを追加します。PUBLISHのユーザープロパティはメッセージに含まれており、
クライアントアプリケーションによって定義されます。PUBLISHおよびWillプロパティのユーザープロパティは、
サーバーによってメッセージの受信者に転送されます。CONNECT、SUBSCRIBE、およびUNSUBSCRIBEパケットの
ユーザープロパティは、サーバーの実装によって定義されます。CONNACK PUBACK、PUBREC、PUBREL、PUBCOMP、
SUBACK、UNSUBACK、およびAUTHパケットのユーザープロパティは、送信者によって定義され、送信者の実装に固有です。
ユーザープロパティの意味はMQTTでは定義されていません。


・最大パケットサイズ
クライアントとサーバーがサポートする最大パケットサイズを個別に指定できるようにします。
セッションパートナーがより大きなパケットを送信するのはエラーです。


・オプションのサーバー機能の可用性
サーバーが許可しない機能のセットを定義し、サーバーがこれをクライアントに指定するためのメカニズムを提供します。
この方法で指定できる機能は、最大QoS、使用可能な保持、使用可能なワイルドカードサブスクリプション、
使用可能なサブスクリプションID、および使用可能な共有サブスクリプションです。
サーバーが利用できないと宣言した機能をクライアントが使用することはエラーです。

以前のバージョンのMQTTfor Serverでは、クライアントがその機能に対して許可されていないことを宣言することにより、
機能を実装しない可能性があります。この機能により、このようなオプションの動作を宣言し、
クライアントがこれらの機能のいずれかを使用するときに特定の理由コードを追加できます。


・強化された認証
相互認証を含むチャレンジ/レスポンススタイルの認証を有効にするメカニズムを提供します。
これにより、クライアントとサーバーの両方でサポートされている場合にSASLスタイルの認証を使用でき、
クライアントが接続内で再認証する機能が含まれます。


・サブスクリプションオプション
メッセージブリッジアプリケーションを可能にするために主に定義されたサブスクリプションオプションを提供します。
これらには、このクライアント（noLocal）で発信されたメッセージを送信しないオプション、
およびサブスクライブ時に保持されたメッセージを処理するためのオプションが含まれます。


・ 遅延
接続の終了からwillメッセージの送信までの遅延を指定する機能を追加します。
これは、セッションへの接続が再確立された場合に、willメッセージが送信されないように設計されています。
これにより、他の人に通知することなく、接続を短時間中断することができます。


・サーバーのキープアライブ
サーバーが、クライアントが存続として使用する値を指定できるようにします。
これにより、サーバーは最大許容キープアライブを設定し、クライアントにそれを尊重させることができます。


・割り当てられたClientID
ClientIDがサーバーによって割り当てられている場合は、割り当てられたClientIDを返します。
これにより、サーバーに割り当てられたClientIDはClean Session = 1接続でのみ使用できるという制限も解除されます。


・サーバーリファレンス
サーバーがCONNACKまたはDISCONNECTで使用する代替サーバーを指定できるようにします。
これは、リダイレクトとして、またはプロビジョニングを行うために使用できます。
